name: Sentry Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(node -p "require('./package.json').version")-dev.${{ github.sha }}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "RELEASE_NAME=coflow@$VERSION" >> $GITHUB_OUTPUT
    
    - name: Build
      run: |
        REACT_APP_VERSION=${{ steps.version.outputs.VERSION }} \
        REACT_APP_BUILD_ID=${{ github.sha }} \
        npm run build
      env:
        CI: true
    
    - name: Create Sentry release
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: coflow
        SENTRY_PROJECT: coflow
      run: |
        # Install Sentry CLI
        npm install -g @sentry/cli
        
        # Create release
        sentry-cli releases new ${{ steps.version.outputs.RELEASE_NAME }}
        
        # Upload source maps
        sentry-cli releases files ${{ steps.version.outputs.RELEASE_NAME }} \
          upload-sourcemaps ./build/static/js \
          --url-prefix "~/static/js" \
          --rewrite \
          --validate
        
        # Associate commits
        sentry-cli releases set-commits ${{ steps.version.outputs.RELEASE_NAME }} --auto
        
        # Finalize release
        sentry-cli releases finalize ${{ steps.version.outputs.RELEASE_NAME }}
    
    - name: Deploy release
      if: github.ref == 'refs/heads/main'
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: coflow
        SENTRY_PROJECT: coflow
      run: |
        sentry-cli releases deploys ${{ steps.version.outputs.RELEASE_NAME }} new -e production
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ steps.version.outputs.VERSION }}
        path: build/